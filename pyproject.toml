[project]
name = "vpn-manager"
version = "0.1.0"
description = "VPN manager based on the sing box core"
readme = "README.md"
authors = [
    { name = "Vlad Korneev", email = "veenrok@veenrok.com" }
]
requires-python = ">=3.13"
dependencies = []

[project.optional-dependencies]
hooks = [
    "pre-commit>=4.2.0",
]
format = [
    "ruff>=0.12.0",
]
lint = [
    "mypy>=1.16.1",
    "ruff>=0.12.0",
]
tests = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-html>=4.1.1",
]

[tool.mypy]
python_version = 3.13                   # Target Python version (3.13)
plugins = []
packages = [
    "src",                              # Source code directory
    "tests"                             # Tests directory
]
disallow_untyped_defs = true            # Demand the annotation in the signatures of functions
no_implicit_optional = true             # Disable automatic Optional
warn_return_any = true                  # Warn about the return of ANY
ignore_missing_imports = true           # Do not swear for missing types in libraries

warn_unused_configs = true              # Warn when config values are unused (catch typos)
warn_unused_ignores = true              # Warn when a '# type: ignore' is no longer needed
allow_redefinition = false              # Disallow redefining names (prevent accidental shadowing)
show_error_codes = true                 # Display MyPy error codes alongside messages
pretty = true                           # Pretty-print MyPy output for readability

[tool.ruff]
target-version = "py313"                # Target Python version (3.13)
line-length = 120                       # Maximum line length
indent-width = 4                        # Number of spaces per indent
src = [
    "src",                              # Source code directory
    "tests",                            # Tests directory
]

[tool.ruff.format]
docstring-code-format = true            # Format code blocks in docstrings
docstring-code-line-length = 80         # Maximum code line length within docstrings
quote-style = "double"                  # Use double quotes for strings
indent-style = "space"                  # Use spaces for indentation
line-ending = "lf"                      # Use LF for line endings
skip-magic-trailing-comma = false       # Do not skip trailing commas in collections
[tool.ruff.lint]
select = [
    "E",                                # pycodestyle errors
    "F",                                # Pyflakes
    "W",                                # pycodestyle warnings
    "C90",                              # McCabe complexity
    "I",                                # isort
    "B",                                # bandit security checks
    "A",                                # annotations
    "N",                                # naming
    "UP",                               # pyupgrade
    "RUF",                              # Ruff-specific
    "D",                                # pydocstyle
]
ignore = [
    "D100",                             # Missing docstring in public module
    "D103",                             # Missing docstring in public package
    "D104",                             # Missing docstring in public function
]
fixable = [
    "ALL",
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true                 # Check __init__ return type annotations
suppress-none-returning = true          # Do not require return annotation for None-returning functions

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true            # Ensure typed exceptions in except blocks

[tool.ruff.lint.isort]
section-order = [
    "future",                           # __future__ imports
    "standard-library",                 # Python standard library
    "third-party",                      # Third-party packages
    "first-party",                      # Local application imports
    "local-folder",                     # Local module imports
]
lines-after-imports = 2                 # Empty lines after the import section
lines-between-types = 1                 # Empty lines between imports

[tool.ruff.lint.pydocstyle]
convention = "pep257"                   # Use PEP 257 docstring convention

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
pythonpath = [
    "src",
]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
    "--asyncio-mode=auto",

    "--html=reports/tests/index.html",

    "--cov=src",
    "--cov-report=html",

]

[tool.coverage.html]
directory = "reports/coverage"
